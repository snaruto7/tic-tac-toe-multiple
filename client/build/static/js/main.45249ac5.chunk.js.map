{"version":3,"sources":["apis/port.js","components/createSession.js","components/joinSession.js","components/landing.js","components/Square.js","components/Board.js","components/Stats.js","components/Announcement.js","components/Lobby.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["socket","io","createSession","props","updateForm","e","setState","player1_name","target","value","state","emit","preventDefault","className","InputGroup","style","width","margin","Input","placeholder","onChange","this","Button","color","onClick","Component","joinSession","invalid","event","name","submitForm","code","on","div","initial","opacity","animate","exit","Landing","useState","modal_create","setModal_create","modal_join","setModal_join","create_toggle","join_toggle","size","Modal","isOpen","toggle","ModalHeader","ModalBody","NavLink","href","Square","renderValue","val","playerMove","gamestate","p1_turn","isPlayer_one","grid","index","console","log","Board","render","map","toString","Stats","centeredStyle","display","alignItems","justifyContent","opponent_name","p2_name","p1_name","wins","p1_score","p2_score","losses","ties","gridTemplateRows","Spinner","height","gridTemplateColumns","Announcement","children","Lobby","componentDidMount","waiting","Waiting","navigator","clipboard","writeText","Game","announcement","message","OpponentDisconnected","text","setTimeout","position","left","top","Container","landing","lobby","pl_one_name","gameState","lobby_waiting","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"+QAIeA,E,MADAC,GADF,KCQQC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAYVC,WAAa,SAACC,GACV,EAAKC,SAAS,CACVC,aAAcF,EAAEG,OAAOC,SAfb,EAqBlBP,cAAgB,SAACG,GACkB,KAA5B,EAAKK,MAAMH,aACVP,EAAOW,KAAK,iBAAiB,EAAKD,MAAMH,cAIxCF,EAAEO,kBAzBN,EAAKF,MAAQ,CACTH,aAAa,IAHH,E,qDAqCd,OAEI,yBAAKM,UAAU,gBACX,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAM,MAAOC,OAAO,WACpC,kBAACC,EAAA,EAAD,CAAOC,YAAY,WAAWC,SAAUC,KAAKjB,cAG7C,kBAACkB,EAAA,EAAD,CAAQT,UAAU,cAAcU,MAAM,UAAUC,QAASH,KAAKnB,eAA9D,sB,GA7CuBuB,a,QCJtBC,E,4MACjBhB,MAAQ,CACJ,KAAQ,GACR,KAAQ,GACRiB,SAAS,G,EAEbvB,WAAa,SAACwB,GAEV,EAAKtB,SAAL,eACKsB,EAAMpB,OAAOqB,KAAOD,EAAMpB,OAAOC,S,EAK1CqB,WAAa,WACiB,KAAvB,EAAKpB,MAAL,MAAoD,KAAvB,EAAKA,MAAL,MAC5BV,EAAOW,KAAK,eAAe,EAAKD,MAAMqB,KAAK,EAAKrB,MAAMmB,O,kEAK1C,IAAD,OACf7B,EAAOgC,GAAG,gBAAe,WACrB,EAAK1B,SAAS,CAACqB,SAAQ,S,+BAM3B,OAEI,yBAAKd,UAAU,gBAEX,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAM,MAAOC,OAAO,WACpC,kBAACC,EAAA,EAAD,CAAOE,SAAUC,KAAKjB,WAAYyB,KAAK,OAAOV,YAAY,cAE9D,kBAACL,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAM,MAAOC,OAAO,WACpC,kBAACC,EAAA,EAAD,CAAOE,SAAUC,KAAKjB,WAAYyB,KAAK,OAAOV,YAAY,kBAE9D,kBAACG,EAAA,EAAD,CAAQE,QAASH,KAAKS,WAAYjB,UAAU,cAAcU,MAAM,WAAhE,gBAECF,KAAKX,MAAMiB,SACZ,kBAAC,IAAOM,IAAR,CAAYC,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IAClE,uBAAGpB,MAAO,CAACQ,MAAM,QAAjB,8B,GA3CoBE,aC4C1Ba,EAzCC,SAAAnC,GAAU,IAAD,EAEmBoC,oBAAS,GAF5B,mBAEdC,EAFc,KAEAC,EAFA,OAGeF,oBAAS,GAHxB,mBAGdG,EAHc,KAGFC,EAHE,KAKfC,EAAgB,kBAAMH,GAAiBD,IACvCK,EAAc,kBAAMF,GAAeD,IAGzC,OACI,kBAAC,IAAD,KACA,kBAAC,IAAOT,IAAR,CAAYpB,UAAU,UAAUqB,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IACvF,wBAAItB,UAAU,SAAd,iBAEI,kBAACS,EAAA,EAAD,CAAQT,UAAU,cAAcU,MAAM,UAAUuB,KAAK,KAAKtB,QAASoB,GAAnE,kBACA,kBAACG,EAAA,EAAD,CAAOC,OAAQR,EAAcS,OAAQL,GACjC,kBAACM,EAAA,EAAD,CAAaD,OAAQL,IACrB,kBAACO,EAAA,EAAD,KACI,kBAAC,EAAD,QAMR,kBAAC7B,EAAA,EAAD,CAAQT,UAAU,cAAcU,MAAM,UAAUuB,KAAK,KAAKtB,QAASqB,GAAnE,gBACA,kBAACE,EAAA,EAAD,CAAOC,OAAQN,EAAYO,OAAQJ,GAC/B,kBAACK,EAAA,EAAD,CAAaD,OAAQJ,IACrB,kBAACM,EAAA,EAAD,KACI,kBAAC,EAAD,QAIR,kBAACC,EAAA,EAAD,CAASC,KAAK,4BAA2B,kBAAC/B,EAAA,EAAD,mB,iBCrCnCgC,E,4MAGlBC,YAAc,SAACC,GACX,MAAY,MAARA,EAEO,SAGM,OAARA,EACE,SAIA,I,EAIfC,WAAa,WACN,EAAKtD,MAAMuD,UAAUC,UAAY,EAAKxD,MAAMuD,UAAUE,cACJ,IAA9C,EAAKzD,MAAMuD,UAAUG,KAAK,EAAK1D,MAAM2D,SACjC,EAAK3D,MAAMuD,UAAUE,cACpB5D,EAAOW,KAAK,cAAe,EAAKR,MAAM2D,MAAO,GAC7CC,QAAQC,IAAI,OAGZhE,EAAOW,KAAK,cAAe,EAAKR,MAAM2D,OAAQ,GAC9CC,QAAQC,IAAI,Q,uDAOxB,OAEI,yBAAKnD,UAAU,eAAeW,QAASH,KAAKoC,YACvCpC,KAAKkC,YAAYlC,KAAKlB,MAAMqD,U,GArCR/B,aCiBhBwC,E,4MAIjBR,WAAa,SAAAK,GACN,EAAKpD,MAAMiD,UAAY,EAAKjD,MAAMkD,cACL,IAAzB,EAAKlD,MAAMmD,KAAKC,KACZ,EAAKpD,MAAMkD,aACV5D,EAAOW,KAAK,cAAemD,EAAO,GAGlC9D,EAAOW,KAAK,cAAemD,GAAQ,K,EAMnDI,OAAS,WAEL,IAAMR,EAAY,EAAKvD,MAAMuD,UAE7B,OACI,yBAAK7C,UAAU,SACV6C,EAAUG,KAAKM,KAAI,SAAC1D,EAAMqD,GACvB,OAAO,kBAAC,EAAD,CAAQN,IAAK/C,EAAM2D,WAAYN,MAAOA,EAAOJ,UAAS,aAAGE,aAAa,EAAKzD,MAAMyD,cAAiBF,U,YAxB1FjC,aCjBd4C,E,4MACjBC,cAAgB,CACZC,QAAQ,OACRC,WAAY,SACZC,eAAe,U,uDAIf,IAAMf,EAAYrC,KAAKlB,MAAMuD,UACvBE,EAAevC,KAAKlB,MAAMyD,aAC1Bc,EAAiBd,EAAeF,EAAUiB,QAAUjB,EAAUkB,QAC9DC,EAAQjB,EAAcF,EAAUoB,SAASpB,EAAUqB,SACnDC,EAAUpB,EAAcF,EAAUqB,SAASrB,EAAUoB,SACrDG,EAAOvB,EAAUuB,KAEvB,OACI,kBAAC,IAAD,KACA,kBAAC,IAAOhD,IAAR,CAAYpB,UAAU,QAAQqB,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IACpFuB,EAAUC,UAAYC,GACnB,yBAAK/C,UAAU,QACX,0CAGP6C,EAAUC,UAAYC,GACnB,yBAAK/C,UAAU,OAAOE,MAAO,CAACwD,QAAQ,OAAQW,iBAAiB,YAC3D,4BAAKR,EAAL,WAEA,yBAAK3D,MAAO,CAACwD,QAAQ,OAAOC,WAAW,SAASC,eAAe,WAC3D,kBAACU,EAAA,EAAD,CAAS5D,MAAM,WAI3B,yBAAKR,MAAO,CAACC,MAAM,OAAQoE,OAAO,OAAQb,QAAQ,OAAQW,iBAAiB,UAAUG,oBAAoB,gBACrG,yBAAKtE,MAAOM,KAAKiD,eACb,oCAEJ,yBAAKvD,MAAOM,KAAKiD,eACb,oCAEJ,yBAAKvD,MAAOM,KAAKiD,eACb,sCAGJ,yBAAKvD,MAAOM,KAAKiD,eACb,2BAAIO,IAER,yBAAK9D,MAAOM,KAAKiD,eACb,2BAAIW,IAER,yBAAKlE,MAAOM,KAAKiD,eACb,2BAAIU,W,GAlDOvD,aCDd6D,E,uKAIb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAOrD,IAAR,CAAYC,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IACnE,4BAAKd,KAAKlB,MAAMoF,gB,GAPM9D,aCMrB+D,E,kDAEjB,WAAYrF,GAAO,IAAD,8BAChB,cAAMA,IAaRsF,kBAAkB,WAChBzF,EAAOgC,GAAG,UAAS,SAAC0B,GAClB,EAAKpD,SAAS,CAACoD,UAAWA,QAhBZ,EAuBlBQ,OAAO,WACL,IAAMR,EAAY,EAAKhD,MAAMgD,UAE7B,OACE,6BACG,EAAKvD,MAAMuF,SAAW,kBAAC,EAAD,CAAS3D,KAAM,EAAKrB,MAAMqB,QAC/C,EAAK5B,MAAMuF,SAAW,kBAAC,EAAD,CAAMhC,UAAWA,EAAWE,aAAc,EAAKzD,MAAMyD,iBA3BjF,EAAKlD,MAAQ,CAEXkD,aAAa,EAAKzD,MAAMyD,aACxB7B,KAAM,EAAK5B,MAAM4B,KACjB2B,UAAW,EAAKvD,MAAMuD,WANR,E,UAFajC,aAyC7BkE,E,uKACK,IAAD,OACN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAO1D,IAAR,CAAYpB,UAAU,gBAAgBqB,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IAC7F,2DACA,kBAACgD,EAAA,EAAD,CAAS5D,MAAM,SACf,2DACA,kBAACD,EAAA,EAAD,CAAQE,QAAS,WAAMoE,UAAUC,UAAUC,UAAU,EAAK3F,MAAM4B,QAASV,KAAKlB,MAAM4B,Y,GAR1EN,aAiBhBsE,E,4MAEJrF,MAAM,CACJsF,cAAc,EACdC,QAAS,GACTC,sBAAsB,G,EAMxBT,kBAAkB,WAChBzF,EAAOgC,GAAG,gBAAgB,SAACmE,GACzB,OAAQA,GACN,IAAK,aACA,EAAKhG,MAAMyD,aACZ,EAAKtD,SAAS,CACZ0F,cAAa,EACbC,QAAS,aAIX,EAAK3F,SAAS,CACZ0F,cAAa,EACbC,QAAS,aAIb,MACF,IAAK,aACA,EAAK9F,MAAMyD,aACZ,EAAKtD,SAAS,CACZ0F,cAAa,EACbC,QAAS,aAIX,EAAK3F,SAAS,CACZ0F,cAAa,EACbC,QAAS,aAGb,MACF,IAAK,MACH,EAAK3F,SAAS,CACZ0F,cAAa,EACbC,QAAS,QAKfG,YAAW,WACT,EAAK9F,SAAS,CAAC0F,cAAc,MAC5B,SAGLhG,EAAOgC,GAAG,qBAAqB,WAC7B,EAAK1B,SAAS,CAAC4F,sBAAqB,Q,uDAKtC,IAAMxC,EAAYrC,KAAKlB,MAAMuD,UAG7B,OACE,yBAAK3C,MAAO,CAACwD,QAAQ,OAAQC,WAAW,SAAUC,eAAe,SAAUW,OAAO,SACjF/D,KAAKX,MAAMwF,sBACV,kBAAC,IAAD,KACE,kBAAC,IAAOjE,IAAR,CAAYlB,MAAO,CAACwD,QAAQ,OAAQC,WAAW,SAAUC,eAAe,SAASW,OAAO,OAAOiB,SAAS,WAAWC,KAAK,KAAKC,IAAI,KAAKvF,MAAM,QAC5IkB,QAAS,CAACC,QAAQ,GAAIC,QAAS,CAACD,QAAQ,GAAIE,KAAM,CAACF,QAAQ,IACzD,4DAGJd,KAAKX,MAAMwF,sBACb,yBAAKrF,UAAU,QACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CAAO6C,UAAWA,EAAWE,aAAcvC,KAAKlB,MAAMyD,gBAGxD,yBAAK/C,UAAU,mBACZQ,KAAKX,MAAMsF,cAAgB,kBAAC,EAAD,KAAe3E,KAAKX,MAAMuF,UACpD5E,KAAKX,MAAMsF,cAAgB,kBAAC,EAAD,CAAOtC,UAAWA,EAAWE,aAAcvC,KAAKlB,MAAMyD,sB,GAlF1EnC,aCzDE+E,E,kDACjB,WAAYrG,GAAQ,IAAD,8BACf,cAAMA,IA2BVsF,kBAAkB,WACdzF,EAAOgC,GAAG,mBAAkB,SAACH,EAAKE,GAAQ,EAAKzB,SAAS,CACpDmG,SAAQ,EACRC,OAAM,EAGNC,YAAa9E,EACbE,KAAKA,EACL6B,cAAa,OAIjB5D,EAAOgC,GAAG,cAAa,SAAC4E,GAIpB,EAAKtG,SAAS,CACVuG,eAAe,EACfJ,SAAQ,EACRC,OAAM,EAENE,UAAWA,QAjDJ,EA2DnB1C,OAAO,WAEH,IAAMR,EAAY,EAAKhD,MAAMkG,UAE7B,OACI,6BACK,EAAKlG,MAAM+F,SAAW,kBAAC,EAAD,MAEtB,EAAK/F,MAAMgG,OAAS,kBAAC,EAAD,CAAOhD,UAAWA,EAAWgC,QAAS,EAAKhF,MAAMmG,cAAe9E,KAAM,EAAKrB,MAAMqB,KAAM6B,aAAc,EAAKlD,MAAMkD,iBAhE7I,EAAKlD,MAAQ,CACT+F,SAAQ,EACRC,OAAM,EAENC,YAAY,GACZE,eAAc,EACd9E,KAAK,GACL6B,cAAa,EAEbgD,UAAW,CACPhC,QAAS,GACTD,QAAS,GACTG,SAAU,EACVC,SAAU,EACVE,KAAM,EACNtB,SAAS,EACTE,KAAM,CAAC,EAAE,EAAE,EACP,EAAE,EAAE,EACJ,EAAE,EAAE,KArBD,E,UADgBpC,aCkBxBqF,MAVf,WAIE,OAEE,kBAAC,EAAD,OCZgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASlD,OACP,kBAAC,IAAMmD,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmB3B,WACrBA,UAAU4B,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/D,QAAQ+D,MAAMA,EAAM7B,a","file":"static/js/main.45249ac5.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst port = \"/\"; //need to change it before deployment\r\nconst socket = io(port);\r\nexport default socket;","import React, { Component } from 'react';\r\nimport {InputGroup,InputGroupAddon,Input,InputGroupText, Button} from 'reactstrap';\r\nimport {motion,AnimatePresence} from 'framer-motion';\r\nimport {Link} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nimport socket from './../apis/port';\r\n\r\n\r\n\r\nexport default class createSession extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            player1_name:\"\"\r\n        };\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n    \r\n    \r\n\r\n    updateForm = (e) => {\r\n        this.setState({\r\n            player1_name: e.target.value\r\n        }\r\n        );\r\n\r\n    }\r\n    \r\n    createSession = (e) => {\r\n        if(this.state.player1_name !== \"\"){\r\n            socket.emit(\"create-session\",this.state.player1_name);\r\n        }\r\n\r\n        else{\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n      \r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"session-page\">\r\n                <InputGroup style={{width:\"95%\", margin:\"0 auto\"}}>\r\n                    <Input placeholder=\"username\" onChange={this.updateForm}/>\r\n                </InputGroup>\r\n                \r\n                    <Button className=\"session-btn\" color=\"primary\" onClick={this.createSession}>Create & Join</Button>\r\n                    \r\n                \r\n            </div>\r\n            \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {InputGroup,InputGroupAddon,Input,InputGroupText, Button} from 'reactstrap';\r\nimport {motion,AnimatePresence} from 'framer-motion';\r\nimport socket from './../apis/port';\r\nimport io from 'socket.io-client';\r\n\r\nexport default class joinSession extends Component {\r\n    state = {\r\n        \"code\": \"\",\r\n        \"name\": \"\",\r\n        invalid: false\r\n    }\r\n    updateForm = (event) => {\r\n        \r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state[\"code\"] !== \"\" && this.state[\"name\"] !== \"\" ){\r\n            socket.emit(\"join-session\",this.state.code,this.state.name);\r\n        }\r\n        // TODO: else give a prompt\r\n    }\r\n\r\n    componentDidMount(){\r\n        socket.on(\"invalid-code\",()=>{\r\n            this.setState({invalid:true});\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"session-page\" >\r\n                \r\n                <InputGroup style={{width:\"95%\", margin:\"0 auto\"}}>\r\n                    <Input onChange={this.updateForm} name=\"name\" placeholder=\"username\"/>\r\n                </InputGroup>\r\n                <InputGroup style={{width:\"95%\", margin:\"0 auto\"}}>\r\n                    <Input onChange={this.updateForm} name=\"code\" placeholder=\"session code\"/>\r\n                </InputGroup>\r\n                <Button onClick={this.submitForm} className=\"session-btn\" color=\"primary\">Join Session</Button>\r\n                \r\n                {this.state.invalid &&\r\n                <motion.div initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}}>\r\n                     <p style={{color:\"red\"}}>Invalid Session Code</p>\r\n                </motion.div>}\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, NavLink, Nav} from 'reactstrap';\r\nimport CreateSession from './createSession';\r\nimport JoinSession from './joinSession';\r\nimport {Link,Route,Switch} from 'react-router-dom';\r\nimport { AnimatePresence,motion } from 'framer-motion';\r\nimport socket from './../apis/port';\r\n\r\n\r\nconst Landing = props => {\r\n   \r\n    const [modal_create, setModal_create] = useState(false);\r\n    const [modal_join, setModal_join] = useState(false);\r\n      \r\n    const create_toggle = () => setModal_create(!modal_create);\r\n    const join_toggle = () => setModal_join(!modal_join);\r\n\r\n    \r\n    return (\r\n        <AnimatePresence>\r\n        <motion.div className=\"landing\" initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}}>\r\n            <h1 className=\"title\">O Tic-Tac-Toe</h1>\r\n            \r\n                <Button className=\"session-btn\" color=\"primary\" size=\"md\" onClick={create_toggle} >Create Session</Button>\r\n                <Modal isOpen={modal_create} toggle={create_toggle}>\r\n                    <ModalHeader toggle={create_toggle}></ModalHeader>\r\n                    <ModalBody>\r\n                        <CreateSession/>\r\n                    </ModalBody>\r\n                </Modal>\r\n                    \r\n            \r\n            \r\n                <Button className=\"session-btn\" color=\"primary\" size=\"md\" onClick={join_toggle}>Join Session</Button>\r\n                <Modal isOpen={modal_join} toggle={join_toggle}>\r\n                    <ModalHeader toggle={join_toggle}></ModalHeader>\r\n                    <ModalBody>\r\n                        <JoinSession/>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n                <NavLink href=\"https://github.com/Ta7ar\"><Button>Github</Button></NavLink>\r\n                \r\n            \r\n        </motion.div>\r\n        </AnimatePresence>\r\n    )\r\n    \r\n}\r\n\r\nexport default Landing;\r\n","import React, {Component} from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport socket from './../apis/port';\r\n\r\n export default class Square extends Component{\r\n\r\n\r\n    renderValue = (val) => { //converts a value index to a string\r\n        if (val === \"1\"){\r\n            //return \"✖\"\r\n            return \"✕\"\r\n            \r\n        }\r\n        else if (val === \"-1\"){\r\n            return \"◯\"\r\n            //return \"○\"\r\n        }\r\n        else{\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    playerMove = () => {\r\n        if(this.props.gamestate.p1_turn === this.props.gamestate.isPlayer_one\r\n            && this.props.gamestate.grid[this.props.index]===0){\r\n                if(this.props.gamestate.isPlayer_one){\r\n                    socket.emit(\"player-move\", this.props.index, 1);\r\n                    console.log(\"X\");\r\n                }\r\n                else{\r\n                    socket.emit(\"player-move\", this.props.index, -1);\r\n                    console.log(\"O\");\r\n                }\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n        \r\n            <div className=\"square-inner\" onClick={this.playerMove}>\r\n                {this.renderValue(this.props.val)}\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Component} from 'react';\r\nimport Square from './Square';\r\nimport socket from './../apis/port';\r\n\r\n/*\r\ngameState = {            //packaged data sent to frontend\r\n    p1_name: \"\",\r\n    p2_name: \"\",\r\n    p1_score: 0,\r\n    p2_score: 0,\r\n    ties: 0,\r\n    p1_turn: true,\r\n    grid: [0,0,0,\r\n        0,0,0,\r\n        0,0,0]\r\n\r\n}\r\n*/\r\n\r\n\r\nexport default class Board extends Component {\r\n    \r\n    \r\n    \r\n    playerMove = index => {\r\n        if(this.state.p1_turn === this.state.isPlayer_one\r\n            && this.state.grid[index]===0){\r\n                if(this.state.isPlayer_one){\r\n                    socket.emit(\"player-move\", index, 1);\r\n                }\r\n                else{\r\n                    socket.emit(\"player-move\", index, -1);\r\n                }\r\n        }\r\n    }\r\n\r\n//note to self, when prop is changed state is not changed\r\n    render = () => {\r\n        \r\n        const gamestate = this.props.gamestate;\r\n    \r\n        return (\r\n            <div className=\"board\">\r\n                {gamestate.grid.map((value,index) => {\r\n                    return <Square val={value.toString()} index={index} gamestate={{isPlayer_one:this.props.isPlayer_one, ...gamestate}}/>\r\n                }) }\r\n\r\n            \r\n                \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component} from 'react'\r\nimport { Spinner,Table } from 'reactstrap';\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\n\r\nexport default class Stats extends Component {\r\n    centeredStyle = {\r\n        display:\"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent:\"center\"\r\n    }\r\n\r\n    render() {\r\n        const gamestate = this.props.gamestate;\r\n        const isPlayer_one = this.props.isPlayer_one;\r\n        const opponent_name = (isPlayer_one)? gamestate.p2_name : gamestate.p1_name;\r\n        const wins = (isPlayer_one)?gamestate.p1_score:gamestate.p2_score;\r\n        const losses = (isPlayer_one)?gamestate.p2_score:gamestate.p1_score;\r\n        const ties = gamestate.ties;\r\n\r\n        return (\r\n            <AnimatePresence>\r\n            <motion.div className=\"stats\" initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}}>\r\n                {gamestate.p1_turn === isPlayer_one &&\r\n                    <div className=\"turn\">\r\n                        <h5>Your Turn</h5>\r\n                    </div>}\r\n\r\n                {gamestate.p1_turn !== isPlayer_one &&\r\n                    <div className=\"turn\" style={{display:\"grid\", gridTemplateRows:\"1fr 1fr\"}}>\r\n                        <h5>{opponent_name}'s Turn</h5>\r\n                        \r\n                        <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n                            <Spinner color=\"dark\" ></Spinner>\r\n                        </div>\r\n                    </div>}\r\n\r\n                <div style={{width:\"100%\", height:\"100%\", display:\"grid\", gridTemplateRows:\"1fr 1fr\",gridTemplateColumns:\"1fr 1fr 1fr\"}}>\r\n                    <div style={this.centeredStyle}>\r\n                        <p>Wins</p>    \r\n                    </div>\r\n                    <div style={this.centeredStyle}>\r\n                        <p>Ties</p>    \r\n                    </div>\r\n                    <div style={this.centeredStyle}>\r\n                        <p>Losses</p>    \r\n                    </div>\r\n\r\n                    <div style={this.centeredStyle}>\r\n                        <p>{wins}</p>    \r\n                    </div>\r\n                    <div style={this.centeredStyle}>\r\n                        <p>{ties}</p>    \r\n                    </div>\r\n                    <div style={this.centeredStyle}>\r\n                        <p>{losses}</p>    \r\n                    </div>\r\n                    \r\n                </div>\r\n                    \r\n            </motion.div>\r\n            </AnimatePresence>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\n\r\nexport default class Announcement extends Component {\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <AnimatePresence>\r\n                <motion.div initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}}>\r\n                    <h3>{this.props.children}</h3>\r\n                </motion.div>\r\n            </AnimatePresence>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useState } from 'react'\r\nimport {motion,AnimatePresence} from 'framer-motion';\r\nimport {Button, Spinner} from 'reactstrap';\r\nimport Board from './Board';\r\nimport Stats from './Stats';\r\nimport Announcement from './Announcement';\r\nimport socket from './../apis/port';\r\n\r\n\r\nexport default class Lobby extends Component {\r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n    \r\n        isPlayer_one:this.props.isPlayer_one,\r\n        code: this.props.code,\r\n        gamestate: this.props.gamestate\r\n        \r\n        \r\n      }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      socket.on(\"update\",(gamestate)=> {\r\n        this.setState({gamestate: gamestate})\r\n        \r\n      })\r\n    }\r\n\r\n\r\n    \r\n    render=()=>{\r\n      const gamestate = this.state.gamestate;\r\n      \r\n      return(\r\n        <div>\r\n          {this.props.waiting && <Waiting code={this.state.code}/>}\r\n          {!this.props.waiting && <Game gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>}\r\n        </div>\r\n    )\r\n    \r\n  \r\n  \r\n      \r\n    }\r\n}\r\n\r\nclass Waiting extends Component{\r\n  render(){\r\n    return (\r\n      <AnimatePresence>\r\n        <motion.div className=\"waiting-lobby\" initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}} >\r\n            <h5>Waiting for someone to join</h5>\r\n            <Spinner color=\"dark\"></Spinner>\r\n            <h6>Click to Copy Session Code:</h6>\r\n            <Button onClick={()=> {navigator.clipboard.writeText(this.props.code)}}>{this.props.code}</Button>\r\n            \r\n        </motion.div>\r\n      </AnimatePresence>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass Game extends Component{\r\n\r\n  state={\r\n    announcement: false,\r\n    message: \"\",\r\n    OpponentDisconnected: false\r\n  }\r\n\r\n  \r\n\r\n\r\n  componentDidMount=()=> {\r\n    socket.on(\"announcement\", (text)=>{\r\n      switch (text){\r\n        case \"player_one\":\r\n          if(this.props.isPlayer_one){\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Won!\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Lost\"\r\n            }\r\n            );\r\n          }\r\n          break;\r\n        case \"player_two\":\r\n          if(this.props.isPlayer_one){\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Lost\"\r\n            });\r\n          }\r\n          else{\r\n            this.setState({\r\n              announcement:true,\r\n              message: \"You Won!\"\r\n            });\r\n          }\r\n          break;\r\n        case \"tie\":\r\n          this.setState({\r\n            announcement:true,\r\n            message: \"Tie\"\r\n          });\r\n          break;\r\n        \r\n      }\r\n      setTimeout(()=>{\r\n        this.setState({announcement: false});\r\n      }, 1250);\r\n    })\r\n\r\n    socket.on(\"user-disconnected\", ()=>{\r\n      this.setState({OpponentDisconnected:true});\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    const gamestate = this.props.gamestate;\r\n    \r\n\r\n    return(\r\n      <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\", height:\"100%\"}}>\r\n      {this.state.OpponentDisconnected &&\r\n        <AnimatePresence>\r\n          <motion.div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\",height:\"100%\",position:\"absolute\",left:\"0%\",top:\"0%\",width:\"100%\"}}\r\n          initial={{opacity:0}} animate={{opacity:1}} exit={{opacity:0}}>\r\n            <h6>Opponent Disconnected :( </h6>\r\n          </motion.div>\r\n        </AnimatePresence>}\r\n      {!this.state.OpponentDisconnected && \r\n      <div className=\"game\">\r\n        <div className=\"board-container\">\r\n          <Board gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>\r\n          \r\n        </div>\r\n        <div className=\"stats-container\">\r\n          {this.state.announcement && <Announcement>{this.state.message}</Announcement>}\r\n          {!this.state.announcement && <Stats gamestate={gamestate} isPlayer_one={this.props.isPlayer_one}/>}\r\n        </div>\r\n      </div>\r\n      }\r\n      </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Landing from \"./landing\";\r\nimport CreateSessionPage from './createSession';\r\nimport JoinSession from './joinSession';\r\nimport Lobby from './Lobby';\r\nimport socket from './../apis/port';\r\nimport io from 'socket.io-client';\r\n\r\n\r\n\r\nexport default class Container extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            landing:true,\r\n            lobby:false,\r\n\r\n            pl_one_name:\"\",\r\n            lobby_waiting:true,\r\n            code:\"\",\r\n            isPlayer_one:false,\r\n\r\n            gameState: {            \r\n                p1_name: \"\",\r\n                p2_name: \"\",\r\n                p1_score: 0,\r\n                p2_score: 0,\r\n                ties: 0,\r\n                p1_turn: true,\r\n                grid: [0,0,0,\r\n                    0,0,0,\r\n                    0,0,0]\r\n        \r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        socket.on(\"session-created\",(name,code)=>{this.setState({\r\n            landing:false,\r\n            lobby:true,\r\n            \r\n\r\n            pl_one_name: name,\r\n            code:code,\r\n            isPlayer_one:true //if you created the session, you are player one. \r\n\r\n        })})\r\n\r\n        socket.on(\"valid-code\",(gameState)=>{\r\n            \r\n            \r\n            \r\n            this.setState({\r\n                lobby_waiting: false,\r\n                landing:false,\r\n                lobby:true,\r\n            \r\n                gameState: gameState\r\n\r\n           })\r\n           \r\n            \r\n           \r\n        })\r\n    }\r\n    \r\n    \r\n    render=()=>{\r\n        \r\n        const gamestate = this.state.gameState;\r\n\r\n        return (\r\n            <div>\r\n                {this.state.landing && <Landing/>}\r\n         \r\n                {this.state.lobby && <Lobby gamestate={gamestate} waiting={this.state.lobby_waiting} code={this.state.code} isPlayer_one={this.state.isPlayer_one} /> }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n//note to self: constructor method in a class is called after calling other methods and setting attributes ","import React from 'react';\n\nimport './App.css';\nimport {BrowserRouter as Router,\n        Switch,\n        Route,\n        Link} from 'react-router-dom';\nimport Landing from './components/landing';\nimport CreateSession from './components/createSession';\nimport JoinSession from './components/joinSession';\nimport Lobby from './components/Lobby';\nimport {motion,AnimatePresence} from 'framer-motion';\nimport Container from './components/Container';\nimport Stats from './components/Stats';\n\n//text selection: shift + left/right keys\n//block moving: ctrl + [/]\n\nfunction App() {\n  \n  \n\n  return (\n    \n    <Container/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';                                    \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}